<!-- vi: set ft=htmldjango -->
<html>
  <head>
    <link rel="stylesheet" type="text/css" href="https://acederberg.io/index.css">
    <link rel="stylesheet" type="text/css" href="/index.css">
    <link rel="shortcut icon" href="https://fastapi.tiangolo.com/img/favicon.png">
    <title>Iterpolator</title>
    <style>
      @media (max-width: 768px) {
        :root {
          --color-card-height: 128px;
          --color-card-padding: 4px;
          --color-card-margin: 4px;
          --color-card-cell-columns: 4;
        }
      }


      @media (min-width: 768px) and (max-width: 1024px) {
        :root {
          --color-card-height: 144px;
          --color-card-padding: 6px;
          --color-card-margin: 6px;
          --color-card-cell-columns: 4;
        }
      }


      @media (min-width: 1024px) and (max-width: 1536px) {
        :root {
          --color-card-height: 160px;
          --color-card-padding: 8px;
          --color-card-margin: 8px;
          --color-card-cell-columns: 5;
        }
      }


      @media (min-width: 1536px) {
        :root {
          --color-card-height: 176px;
          --color-card-padding: 10px;
          --color-card-margin: 10px;
          --color-card-cell-columns: 6;
        }
      }


      :root {
        --background1: #301f1f;
        --background2: #402f2f;

        /* Shadows */
        --color-card-shadow-color: rgba(0, 0, 0,.3); 
        --color-card-shadow-color-hover: rgba(0, 0, 0, .2);

        /* Borders */
        --standard-border-large-width: 4px;
        --standard-border-small-width: 1px;
        --standard-border-large: var(--standard-border-large-width) solid var(--background1);
        --standard-border-large-half: calc(var(--standard-border-large-width) / 2) solid var(--background1);
        --standard-border-small: var(--standard-border-small-width) solid var(--background2);

        /* Borders */
        --form-item-height: 64px;
        --form-item-width: 64px;
        --form-item-padding: 8px;
        --form-item-margin: 8px;

        /* Derived */
        --color-card-width: var(--color-card-height);
        --color-card-cell-size: calc(2 * (var(--color-card-padding) + var(--color-card-margin)) + var(--color-card-height));
        --color-controls-height: calc(var(--color-card-height) / 2);
        --color-interpolator-width: calc(var(--color-card-cell-size) * var(--color-card-cell-columns));
        --color-controls-width: calc(
          var(--color-interpolator-width) 
          - 2 * (var(--color-card-padding) + var(--color-card-margin))
        );
      }

      /* ------------------------------------------------------------------- */

      .color-card-grid {
        display: grid;
        grid-template-columns: repeat(var(--color-card-cell-columns), var(--color-card-cell-size));
        grid-template-rows: repeat(auto, var(--color-card-cell-size));
      }

      .color-card {
        justify-content: center;
        align-items: center;
        position: relative;

        width: var(--color-card-height);
        height: var(--color-card-height);
        padding: var(--color-card-padding);
        margin: var(--color-card-margin);
        transition: all .4s ease;

        box-shadow: 8px 28px 50px var(--color-card-shadow-color); 
      }

      .color-card:hover {
        z-index: 1;
        transform: translate3D(0, -1px,  0) scale(1.1);

        box-shadow: 16px 36px 58px var(--color-card-shadow-color-hover);
      }

      .color-card p {
        filter: invert(100%) sepia(2%) saturate(1401%) hue-rotate(187deg) brightness(99%) contrast(85%);
      }

      .color-card p img { 
        height: 1em; 
        filter: invert(100%) sepia(2%) saturate(1401%) hue-rotate(187deg) brightness(99%) contrast(85%);
        mix-blend-mode: difference;
      }

      .color-card p img:hover { 
        z-index: 2;
        transform: translate3D(0, -1px,  0) scale(1.2);

        box-shadow: 16px 36px 58px var(--color-card-shadow-color-hover);
        height: 1.1em; 
      }

      /* ------------------------------------------------------------------- */

      .color-card-controls {
        padding: var(--color-card-padding);
        margin: var(--color-card-padding);
        height: var(--color-controls-height);
        width: calc(var(--color-controls-width) - 6px);

        border: var(--standard-border-large);
      }

      #color-card-controls-left {
        border-right: var(--standard-border-large-half);
        padding-left: 0px;
        margin-left: 0px;
      }

      #color-card-controls-right {
        border-left: var(--standard-border-large-half);
        padding-right: 0px;
        margin-right: 0px;
      }

      .color-card-controls form{
        display: flex;
        justify-content: center;
        align-items: center;

        height: var(--color-controls-height);
        width: calc(var(--color-controls-width) / 2);
        padding: var(--color-card-padding) 0px var(--color-card-padding) 0px;
        margin: var(--color-card-padding) 0px var(--color-card-padding) 0px;
      }

      .color-card-controls form input {
        background-color: #301f1f;
        border: 1px solid #402f2f;

        height: var(--form-item-height);
        width: var(--form-item-width);
        margin: var(--form-item-margin);
        padding: var(--form-item-padding);

        color: var(--nord5);
      }

      .color-card-controls form input[type="submit"] {
        transition: all .4s ease;
      }

      .color-card-controls form input[type="submit"]:hover {
        z-index: 1;
        transform: translate3D(0, -1px,  0) scale(1.1);
        box-shadow: 16px 36px 58px var(--color-card-shadow-color-hover);
      }

      /*
      .color-card-controls form input[type="submit"] {
        margin-left: 16px;
        margin-right: 16px;
      }


      .color-card-controls form label {
        padding-left: 4px;
        padding-right: 4px;
        background-color: inherit;
      }
      */

      /* ------------------------------------------------------------------- */

      #color-interpolator-info h1,
      #color-interpolator > * {
        display: flex;
        justify-content: center;
        align-items: center;
      }

      #color-interpolator,
      #color-interpolator-info {
        width: var(--color-interpolator-width);
      }


    </style>
  </head>
  <div class="wrapper">
    <section id="color-interpolator-info">
      <h1>Color Interpolator</h1>
      <p>
        This is a little demo project to practice building basic 'reactive like'
        webpages. I wanted to do this since <tt>react</tt> has been a crutch of 
        mine. This page is a template rendered by <tt>FastAPI</tt> that uses 
        the below forms to redirect to a rerendering of the same page.
      </p>
    </section>
    <br>
    <section id="color-interpolator">
      <div class="color-card-controls">
        <form action="/interpolate" id="color-card-controls-left" method="GET">
          <label for="start">Start</label><input value={{ start or "#ffffff" }} name="start" type="color"></input>
          <label for="stop">Stop</label><input value={{ stop or "#000000" }} name="stop" type="color"></input>
          <label for="steps">Steps</label><input value={{ steps or 8 }} name="steps" type="number"></input>
          <input name="submit" type="submit"></input>
        </form>
        <form action="/interpolate" id="color-card-controls-right">
          <label for="steps">Steps</label><input value={{ steps }} name="steps" type="number"></input>
          <input value=1 name="random" hidden=1></input>
          <input name="submit" type="submit" value="Random"></input>
        </form>
      </div>
      <br>
      <div class="color-card-container">
        <div class="color-card-grid">
          {% for color in colors %}
            <div class="color-card" style="background-color: {{ color.hex }}">
              <p><img 
                src="https://acederberg.io/copy.svg"
                alt="copy"
              ></img>{{ color.hex }}</p>
              <p>
              <img 
                src="https://acederberg.io/copy.svg"
                alt="copy"
              ></img>rgb({{ color.r }}, {{ color.g }}, {{ color.b }})</p>
            </div>
          {% endfor %}
        </div>
      </div>
    </section>
  </div>
</html>
